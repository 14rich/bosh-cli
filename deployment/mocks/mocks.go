// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/deployment (interfaces: Deployment,Deployer)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	cloud "github.com/cloudfoundry/bosh-micro-cli/cloud"
	deployment "github.com/cloudfoundry/bosh-micro-cli/deployment"
	manifest "github.com/cloudfoundry/bosh-micro-cli/deployment/manifest"
	stemcell "github.com/cloudfoundry/bosh-micro-cli/deployment/stemcell"
	vm "github.com/cloudfoundry/bosh-micro-cli/deployment/vm"
	manifest0 "github.com/cloudfoundry/bosh-micro-cli/installation/manifest"
)

// Mock of Deployment interface
type MockDeployment struct {
	ctrl     *gomock.Controller
	recorder *_MockDeploymentRecorder
}

// Recorder for MockDeployment (not exported)
type _MockDeploymentRecorder struct {
	mock *MockDeployment
}

func NewMockDeployment(ctrl *gomock.Controller) *MockDeployment {
	mock := &MockDeployment{ctrl: ctrl}
	mock.recorder = &_MockDeploymentRecorder{mock}
	return mock
}

func (_m *MockDeployment) EXPECT() *_MockDeploymentRecorder {
	return _m.recorder
}

// Mock of Deployer interface
type MockDeployer struct {
	ctrl     *gomock.Controller
	recorder *_MockDeployerRecorder
}

// Recorder for MockDeployer (not exported)
type _MockDeployerRecorder struct {
	mock *MockDeployer
}

func NewMockDeployer(ctrl *gomock.Controller) *MockDeployer {
	mock := &MockDeployer{ctrl: ctrl}
	mock.recorder = &_MockDeployerRecorder{mock}
	return mock
}

func (_m *MockDeployer) EXPECT() *_MockDeployerRecorder {
	return _m.recorder
}

func (_m *MockDeployer) Deploy(_param0 cloud.Cloud, _param1 manifest.Manifest, _param2 stemcell.ExtractedStemcell, _param3 manifest0.Registry, _param4 manifest0.SSHTunnel, _param5 vm.Manager) (deployment.Deployment, error) {
	ret := _m.ctrl.Call(_m, "Deploy", _param0, _param1, _param2, _param3, _param4, _param5)
	ret0, _ := ret[0].(deployment.Deployment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDeployerRecorder) Deploy(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Deploy", arg0, arg1, arg2, arg3, arg4, arg5)
}
