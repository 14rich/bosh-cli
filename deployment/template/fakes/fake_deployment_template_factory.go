// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-init/deployment/template"
)

type FakeDeploymentTemplateFactory struct {
	NewTemplateFromPathStub        func(path string) (template.DeploymentTemplate, error)
	newTemplateFromPathMutex       sync.RWMutex
	newTemplateFromPathArgsForCall []struct {
		path string
	}
	newTemplateFromPathReturns struct {
		result1 template.DeploymentTemplate
		result2 error
	}
	NewTemplateFromBytesStub        func(bytes []byte) template.DeploymentTemplate
	newTemplateFromBytesMutex       sync.RWMutex
	newTemplateFromBytesArgsForCall []struct {
		bytes []byte
	}
	newTemplateFromBytesReturns struct {
		result1 template.DeploymentTemplate
	}
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromPath(path string) (template.DeploymentTemplate, error) {
	fake.newTemplateFromPathMutex.Lock()
	fake.newTemplateFromPathArgsForCall = append(fake.newTemplateFromPathArgsForCall, struct {
		path string
	}{path})
	fake.newTemplateFromPathMutex.Unlock()
	if fake.NewTemplateFromPathStub != nil {
		return fake.NewTemplateFromPathStub(path)
	} else {
		return fake.newTemplateFromPathReturns.result1, fake.newTemplateFromPathReturns.result2
	}
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromPathCallCount() int {
	fake.newTemplateFromPathMutex.RLock()
	defer fake.newTemplateFromPathMutex.RUnlock()
	return len(fake.newTemplateFromPathArgsForCall)
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromPathArgsForCall(i int) string {
	fake.newTemplateFromPathMutex.RLock()
	defer fake.newTemplateFromPathMutex.RUnlock()
	return fake.newTemplateFromPathArgsForCall[i].path
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromPathReturns(result1 template.DeploymentTemplate, result2 error) {
	fake.NewTemplateFromPathStub = nil
	fake.newTemplateFromPathReturns = struct {
		result1 template.DeploymentTemplate
		result2 error
	}{result1, result2}
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromBytes(bytes []byte) template.DeploymentTemplate {
	fake.newTemplateFromBytesMutex.Lock()
	fake.newTemplateFromBytesArgsForCall = append(fake.newTemplateFromBytesArgsForCall, struct {
		bytes []byte
	}{bytes})
	fake.newTemplateFromBytesMutex.Unlock()
	if fake.NewTemplateFromBytesStub != nil {
		return fake.NewTemplateFromBytesStub(bytes)
	} else {
		return fake.newTemplateFromBytesReturns.result1
	}
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromBytesCallCount() int {
	fake.newTemplateFromBytesMutex.RLock()
	defer fake.newTemplateFromBytesMutex.RUnlock()
	return len(fake.newTemplateFromBytesArgsForCall)
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromBytesArgsForCall(i int) []byte {
	fake.newTemplateFromBytesMutex.RLock()
	defer fake.newTemplateFromBytesMutex.RUnlock()
	return fake.newTemplateFromBytesArgsForCall[i].bytes
}

func (fake *FakeDeploymentTemplateFactory) NewTemplateFromBytesReturns(result1 template.DeploymentTemplate) {
	fake.NewTemplateFromBytesStub = nil
	fake.newTemplateFromBytesReturns = struct {
		result1 template.DeploymentTemplate
	}{result1}
}

var _ template.DeploymentTemplateFactory = new(FakeDeploymentTemplateFactory)
