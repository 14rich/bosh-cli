// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/deployment/release (interfaces: JobResolver)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	manifest "github.com/cloudfoundry/bosh-micro-cli/deployment/manifest"
	release "github.com/cloudfoundry/bosh-micro-cli/release"
)

// Mock of JobResolver interface
type MockJobResolver struct {
	ctrl     *gomock.Controller
	recorder *_MockJobResolverRecorder
}

// Recorder for MockJobResolver (not exported)
type _MockJobResolverRecorder struct {
	mock *MockJobResolver
}

func NewMockJobResolver(ctrl *gomock.Controller) *MockJobResolver {
	mock := &MockJobResolver{ctrl: ctrl}
	mock.recorder = &_MockJobResolverRecorder{mock}
	return mock
}

func (_m *MockJobResolver) EXPECT() *_MockJobResolverRecorder {
	return _m.recorder
}

func (_m *MockJobResolver) Resolve(_param0 manifest.ReleaseJobRef) (release.Job, error) {
	ret := _m.ctrl.Call(_m, "Resolve", _param0)
	ret0, _ := ret[0].(release.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobResolverRecorder) Resolve(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Resolve", arg0)
}

func (_m *MockJobResolver) ResolveEach(_param0 []manifest.ReleaseJobRef) ([]release.Job, error) {
	ret := _m.ctrl.Call(_m, "ResolveEach", _param0)
	ret0, _ := ret[0].([]release.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobResolverRecorder) ResolveEach(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ResolveEach", arg0)
}
