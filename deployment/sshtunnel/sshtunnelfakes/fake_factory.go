// This file was generated by counterfeiter
package sshtunnelfakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-cli/deployment/sshtunnel"
)

type FakeFactory struct {
	NewSSHTunnelStub        func(sshtunnel.Options) sshtunnel.SSHTunnel
	newSSHTunnelMutex       sync.RWMutex
	newSSHTunnelArgsForCall []struct {
		arg1 sshtunnel.Options
	}
	newSSHTunnelReturns struct {
		result1 sshtunnel.SSHTunnel
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeFactory) NewSSHTunnel(arg1 sshtunnel.Options) sshtunnel.SSHTunnel {
	fake.newSSHTunnelMutex.Lock()
	fake.newSSHTunnelArgsForCall = append(fake.newSSHTunnelArgsForCall, struct {
		arg1 sshtunnel.Options
	}{arg1})
	fake.recordInvocation("NewSSHTunnel", []interface{}{arg1})
	fake.newSSHTunnelMutex.Unlock()
	if fake.NewSSHTunnelStub != nil {
		return fake.NewSSHTunnelStub(arg1)
	} else {
		return fake.newSSHTunnelReturns.result1
	}
}

func (fake *FakeFactory) NewSSHTunnelCallCount() int {
	fake.newSSHTunnelMutex.RLock()
	defer fake.newSSHTunnelMutex.RUnlock()
	return len(fake.newSSHTunnelArgsForCall)
}

func (fake *FakeFactory) NewSSHTunnelArgsForCall(i int) sshtunnel.Options {
	fake.newSSHTunnelMutex.RLock()
	defer fake.newSSHTunnelMutex.RUnlock()
	return fake.newSSHTunnelArgsForCall[i].arg1
}

func (fake *FakeFactory) NewSSHTunnelReturns(result1 sshtunnel.SSHTunnel) {
	fake.NewSSHTunnelStub = nil
	fake.newSSHTunnelReturns = struct {
		result1 sshtunnel.SSHTunnel
	}{result1}
}

func (fake *FakeFactory) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.newSSHTunnelMutex.RLock()
	defer fake.newSSHTunnelMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeFactory) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ sshtunnel.Factory = new(FakeFactory)
