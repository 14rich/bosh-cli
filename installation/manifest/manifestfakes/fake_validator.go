// This file was generated by counterfeiter
package manifestfakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-cli/installation/manifest"
	manifestset "github.com/cloudfoundry/bosh-cli/release/set/manifest"
)

type FakeValidator struct {
	ValidateStub        func(manifest.Manifest, manifestset.Manifest) error
	validateMutex       sync.RWMutex
	validateArgsForCall []struct {
		arg1 manifest.Manifest
		arg2 manifestset.Manifest
	}
	validateReturns struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeValidator) Validate(arg1 manifest.Manifest, arg2 manifestset.Manifest) error {
	fake.validateMutex.Lock()
	fake.validateArgsForCall = append(fake.validateArgsForCall, struct {
		arg1 manifest.Manifest
		arg2 manifestset.Manifest
	}{arg1, arg2})
	fake.recordInvocation("Validate", []interface{}{arg1, arg2})
	fake.validateMutex.Unlock()
	if fake.ValidateStub != nil {
		return fake.ValidateStub(arg1, arg2)
	} else {
		return fake.validateReturns.result1
	}
}

func (fake *FakeValidator) ValidateCallCount() int {
	fake.validateMutex.RLock()
	defer fake.validateMutex.RUnlock()
	return len(fake.validateArgsForCall)
}

func (fake *FakeValidator) ValidateArgsForCall(i int) (manifest.Manifest, manifestset.Manifest) {
	fake.validateMutex.RLock()
	defer fake.validateMutex.RUnlock()
	return fake.validateArgsForCall[i].arg1, fake.validateArgsForCall[i].arg2
}

func (fake *FakeValidator) ValidateReturns(result1 error) {
	fake.ValidateStub = nil
	fake.validateReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeValidator) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.validateMutex.RLock()
	defer fake.validateMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeValidator) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ manifest.Validator = new(FakeValidator)
