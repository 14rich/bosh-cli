// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/cpi (interfaces: Installation,InstallationFactory)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	cloud "github.com/cloudfoundry/bosh-micro-cli/cloud"
	cpi "github.com/cloudfoundry/bosh-micro-cli/cpi"
	manifest "github.com/cloudfoundry/bosh-micro-cli/installation/manifest"
)

// Mock of Installation interface
type MockInstallation struct {
	ctrl     *gomock.Controller
	recorder *_MockInstallationRecorder
}

// Recorder for MockInstallation (not exported)
type _MockInstallationRecorder struct {
	mock *MockInstallation
}

func NewMockInstallation(ctrl *gomock.Controller) *MockInstallation {
	mock := &MockInstallation{ctrl: ctrl}
	mock.recorder = &_MockInstallationRecorder{mock}
	return mock
}

func (_m *MockInstallation) EXPECT() *_MockInstallationRecorder {
	return _m.recorder
}

func (_m *MockInstallation) Install() (cloud.Cloud, error) {
	ret := _m.ctrl.Call(_m, "Install")
	ret0, _ := ret[0].(cloud.Cloud)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockInstallationRecorder) Install() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Install")
}

func (_m *MockInstallation) Manifest() manifest.Manifest {
	ret := _m.ctrl.Call(_m, "Manifest")
	ret0, _ := ret[0].(manifest.Manifest)
	return ret0
}

func (_mr *_MockInstallationRecorder) Manifest() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Manifest")
}

func (_m *MockInstallation) StartJobs() error {
	ret := _m.ctrl.Call(_m, "StartJobs")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstallationRecorder) StartJobs() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StartJobs")
}

func (_m *MockInstallation) StopJobs() error {
	ret := _m.ctrl.Call(_m, "StopJobs")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockInstallationRecorder) StopJobs() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "StopJobs")
}

// Mock of InstallationFactory interface
type MockInstallationFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockInstallationFactoryRecorder
}

// Recorder for MockInstallationFactory (not exported)
type _MockInstallationFactoryRecorder struct {
	mock *MockInstallationFactory
}

func NewMockInstallationFactory(ctrl *gomock.Controller) *MockInstallationFactory {
	mock := &MockInstallationFactory{ctrl: ctrl}
	mock.recorder = &_MockInstallationFactoryRecorder{mock}
	return mock
}

func (_m *MockInstallationFactory) EXPECT() *_MockInstallationFactoryRecorder {
	return _m.recorder
}

func (_m *MockInstallationFactory) NewInstallation(_param0 manifest.Manifest, _param1 string, _param2 string) cpi.Installation {
	ret := _m.ctrl.Call(_m, "NewInstallation", _param0, _param1, _param2)
	ret0, _ := ret[0].(cpi.Installation)
	return ret0
}

func (_mr *_MockInstallationFactoryRecorder) NewInstallation(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewInstallation", arg0, arg1, arg2)
}
