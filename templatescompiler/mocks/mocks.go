// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/templatescompiler (interfaces: JobRenderer,RenderedJob,RenderedJobList)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	release "github.com/cloudfoundry/bosh-micro-cli/release"
	templatescompiler "github.com/cloudfoundry/bosh-micro-cli/templatescompiler"
)

// Mock of JobRenderer interface
type MockJobRenderer struct {
	ctrl     *gomock.Controller
	recorder *_MockJobRendererRecorder
}

// Recorder for MockJobRenderer (not exported)
type _MockJobRendererRecorder struct {
	mock *MockJobRenderer
}

func NewMockJobRenderer(ctrl *gomock.Controller) *MockJobRenderer {
	mock := &MockJobRenderer{ctrl: ctrl}
	mock.recorder = &_MockJobRendererRecorder{mock}
	return mock
}

func (_m *MockJobRenderer) EXPECT() *_MockJobRendererRecorder {
	return _m.recorder
}

func (_m *MockJobRenderer) Render(_param0 release.Job, _param1 map[string]interface{}, _param2 string) (templatescompiler.RenderedJob, error) {
	ret := _m.ctrl.Call(_m, "Render", _param0, _param1, _param2)
	ret0, _ := ret[0].(templatescompiler.RenderedJob)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockJobRendererRecorder) Render(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Render", arg0, arg1, arg2)
}

// Mock of RenderedJob interface
type MockRenderedJob struct {
	ctrl     *gomock.Controller
	recorder *_MockRenderedJobRecorder
}

// Recorder for MockRenderedJob (not exported)
type _MockRenderedJobRecorder struct {
	mock *MockRenderedJob
}

func NewMockRenderedJob(ctrl *gomock.Controller) *MockRenderedJob {
	mock := &MockRenderedJob{ctrl: ctrl}
	mock.recorder = &_MockRenderedJobRecorder{mock}
	return mock
}

func (_m *MockRenderedJob) EXPECT() *_MockRenderedJobRecorder {
	return _m.recorder
}

func (_m *MockRenderedJob) Delete() error {
	ret := _m.ctrl.Call(_m, "Delete")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRenderedJobRecorder) Delete() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete")
}

func (_m *MockRenderedJob) DeleteSilently() {
	_m.ctrl.Call(_m, "DeleteSilently")
}

func (_mr *_MockRenderedJobRecorder) DeleteSilently() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteSilently")
}

func (_m *MockRenderedJob) Job() release.Job {
	ret := _m.ctrl.Call(_m, "Job")
	ret0, _ := ret[0].(release.Job)
	return ret0
}

func (_mr *_MockRenderedJobRecorder) Job() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Job")
}

func (_m *MockRenderedJob) Path() string {
	ret := _m.ctrl.Call(_m, "Path")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockRenderedJobRecorder) Path() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Path")
}

// Mock of RenderedJobList interface
type MockRenderedJobList struct {
	ctrl     *gomock.Controller
	recorder *_MockRenderedJobListRecorder
}

// Recorder for MockRenderedJobList (not exported)
type _MockRenderedJobListRecorder struct {
	mock *MockRenderedJobList
}

func NewMockRenderedJobList(ctrl *gomock.Controller) *MockRenderedJobList {
	mock := &MockRenderedJobList{ctrl: ctrl}
	mock.recorder = &_MockRenderedJobListRecorder{mock}
	return mock
}

func (_m *MockRenderedJobList) EXPECT() *_MockRenderedJobListRecorder {
	return _m.recorder
}

func (_m *MockRenderedJobList) Add(_param0 templatescompiler.RenderedJob) {
	_m.ctrl.Call(_m, "Add", _param0)
}

func (_mr *_MockRenderedJobListRecorder) Add(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Add", arg0)
}

func (_m *MockRenderedJobList) All() []templatescompiler.RenderedJob {
	ret := _m.ctrl.Call(_m, "All")
	ret0, _ := ret[0].([]templatescompiler.RenderedJob)
	return ret0
}

func (_mr *_MockRenderedJobListRecorder) All() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "All")
}

func (_m *MockRenderedJobList) Delete() error {
	ret := _m.ctrl.Call(_m, "Delete")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRenderedJobListRecorder) Delete() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete")
}

func (_m *MockRenderedJobList) DeleteSilently() {
	_m.ctrl.Call(_m, "DeleteSilently")
}

func (_mr *_MockRenderedJobListRecorder) DeleteSilently() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteSilently")
}
