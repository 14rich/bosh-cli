// This file was generated by counterfeiter
package blobstorefakes

import (
	"net/http"
	"sync"

	"github.com/cloudfoundry/bosh-cli/blobstore"
)

type FakeFactory struct {
	CreateStub        func(string, *http.Client) (blobstore.Blobstore, error)
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		arg1 string
		arg2 *http.Client
	}
	createReturns struct {
		result1 blobstore.Blobstore
		result2 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeFactory) Create(arg1 string, arg2 *http.Client) (blobstore.Blobstore, error) {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		arg1 string
		arg2 *http.Client
	}{arg1, arg2})
	fake.recordInvocation("Create", []interface{}{arg1, arg2})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(arg1, arg2)
	} else {
		return fake.createReturns.result1, fake.createReturns.result2
	}
}

func (fake *FakeFactory) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *FakeFactory) CreateArgsForCall(i int) (string, *http.Client) {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].arg1, fake.createArgsForCall[i].arg2
}

func (fake *FakeFactory) CreateReturns(result1 blobstore.Blobstore, result2 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 blobstore.Blobstore
		result2 error
	}{result1, result2}
}

func (fake *FakeFactory) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeFactory) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ blobstore.Factory = new(FakeFactory)
