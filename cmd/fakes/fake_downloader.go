// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-cli/cmd"
)

type FakeDownloader struct {
	DownloadStub        func(blobstoreID, sha1, prefix, dstDirPath string) error
	downloadMutex       sync.RWMutex
	downloadArgsForCall []struct {
		blobstoreID string
		sha1        string
		prefix      string
		dstDirPath  string
	}
	downloadReturns struct {
		result1 error
	}
}

func (fake *FakeDownloader) Download(blobstoreID string, sha1 string, prefix string, dstDirPath string) error {
	fake.downloadMutex.Lock()
	fake.downloadArgsForCall = append(fake.downloadArgsForCall, struct {
		blobstoreID string
		sha1        string
		prefix      string
		dstDirPath  string
	}{blobstoreID, sha1, prefix, dstDirPath})
	fake.downloadMutex.Unlock()
	if fake.DownloadStub != nil {
		return fake.DownloadStub(blobstoreID, sha1, prefix, dstDirPath)
	} else {
		return fake.downloadReturns.result1
	}
}

func (fake *FakeDownloader) DownloadCallCount() int {
	fake.downloadMutex.RLock()
	defer fake.downloadMutex.RUnlock()
	return len(fake.downloadArgsForCall)
}

func (fake *FakeDownloader) DownloadArgsForCall(i int) (string, string, string, string) {
	fake.downloadMutex.RLock()
	defer fake.downloadMutex.RUnlock()
	return fake.downloadArgsForCall[i].blobstoreID, fake.downloadArgsForCall[i].sha1, fake.downloadArgsForCall[i].prefix, fake.downloadArgsForCall[i].dstDirPath
}

func (fake *FakeDownloader) DownloadReturns(result1 error) {
	fake.DownloadStub = nil
	fake.downloadReturns = struct {
		result1 error
	}{result1}
}

var _ cmd.Downloader = new(FakeDownloader)
