// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-init/release/job"
	boshman "github.com/cloudfoundry/bosh-init/release/manifest"
)

type FakeArchiveReader struct {
	ReadStub        func(boshman.JobRef, string) (*job.Job, error)
	readMutex       sync.RWMutex
	readArgsForCall []struct {
		arg1 boshman.JobRef
		arg2 string
	}
	readReturns struct {
		result1 *job.Job
		result2 error
	}
}

func (fake *FakeArchiveReader) Read(arg1 boshman.JobRef, arg2 string) (*job.Job, error) {
	fake.readMutex.Lock()
	fake.readArgsForCall = append(fake.readArgsForCall, struct {
		arg1 boshman.JobRef
		arg2 string
	}{arg1, arg2})
	fake.readMutex.Unlock()
	if fake.ReadStub != nil {
		return fake.ReadStub(arg1, arg2)
	} else {
		return fake.readReturns.result1, fake.readReturns.result2
	}
}

func (fake *FakeArchiveReader) ReadCallCount() int {
	fake.readMutex.RLock()
	defer fake.readMutex.RUnlock()
	return len(fake.readArgsForCall)
}

func (fake *FakeArchiveReader) ReadArgsForCall(i int) (boshman.JobRef, string) {
	fake.readMutex.RLock()
	defer fake.readMutex.RUnlock()
	return fake.readArgsForCall[i].arg1, fake.readArgsForCall[i].arg2
}

func (fake *FakeArchiveReader) ReadReturns(result1 *job.Job, result2 error) {
	fake.ReadStub = nil
	fake.readReturns = struct {
		result1 *job.Job
		result2 error
	}{result1, result2}
}

var _ job.ArchiveReader = new(FakeArchiveReader)
