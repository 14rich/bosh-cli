// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/release/job (interfaces: Resolver)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
	release "github.com/cloudfoundry/bosh-micro-cli/release"
	job "github.com/cloudfoundry/bosh-micro-cli/release/job"
)

// Mock of Resolver interface
type MockResolver struct {
	ctrl     *gomock.Controller
	recorder *_MockResolverRecorder
}

// Recorder for MockResolver (not exported)
type _MockResolverRecorder struct {
	mock *MockResolver
}

func NewMockResolver(ctrl *gomock.Controller) *MockResolver {
	mock := &MockResolver{ctrl: ctrl}
	mock.recorder = &_MockResolverRecorder{mock}
	return mock
}

func (_m *MockResolver) EXPECT() *_MockResolverRecorder {
	return _m.recorder
}

func (_m *MockResolver) Resolve(_param0 job.Reference) (release.Job, error) {
	ret := _m.ctrl.Call(_m, "Resolve", _param0)
	ret0, _ := ret[0].(release.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockResolverRecorder) Resolve(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Resolve", arg0)
}

func (_m *MockResolver) ResolveEach(_param0 []job.Reference) ([]release.Job, error) {
	ret := _m.ctrl.Call(_m, "ResolveEach", _param0)
	ret0, _ := ret[0].([]release.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockResolverRecorder) ResolveEach(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ResolveEach", arg0)
}
