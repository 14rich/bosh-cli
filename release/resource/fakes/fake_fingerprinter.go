// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-cli/release/resource"
)

type FakeFingerprinter struct {
	CalculateStub        func([]resource.File, []string) (string, error)
	calculateMutex       sync.RWMutex
	calculateArgsForCall []struct {
		arg1 []resource.File
		arg2 []string
	}
	calculateReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeFingerprinter) Calculate(arg1 []resource.File, arg2 []string) (string, error) {
	fake.calculateMutex.Lock()
	fake.calculateArgsForCall = append(fake.calculateArgsForCall, struct {
		arg1 []resource.File
		arg2 []string
	}{arg1, arg2})
	fake.calculateMutex.Unlock()
	if fake.CalculateStub != nil {
		return fake.CalculateStub(arg1, arg2)
	} else {
		return fake.calculateReturns.result1, fake.calculateReturns.result2
	}
}

func (fake *FakeFingerprinter) CalculateCallCount() int {
	fake.calculateMutex.RLock()
	defer fake.calculateMutex.RUnlock()
	return len(fake.calculateArgsForCall)
}

func (fake *FakeFingerprinter) CalculateArgsForCall(i int) ([]resource.File, []string) {
	fake.calculateMutex.RLock()
	defer fake.calculateMutex.RUnlock()
	return fake.calculateArgsForCall[i].arg1, fake.calculateArgsForCall[i].arg2
}

func (fake *FakeFingerprinter) CalculateReturns(result1 string, result2 error) {
	fake.CalculateStub = nil
	fake.calculateReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ resource.Fingerprinter = new(FakeFingerprinter)
