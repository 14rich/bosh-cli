// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry/bosh-cli/release"
)

type FakeWriter struct {
	WriteStub        func(release.Release, []string) (string, error)
	writeMutex       sync.RWMutex
	writeArgsForCall []struct {
		arg1 release.Release
		arg2 []string
	}
	writeReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeWriter) Write(arg1 release.Release, arg2 []string) (string, error) {
	fake.writeMutex.Lock()
	fake.writeArgsForCall = append(fake.writeArgsForCall, struct {
		arg1 release.Release
		arg2 []string
	}{arg1, arg2})
	fake.writeMutex.Unlock()
	if fake.WriteStub != nil {
		return fake.WriteStub(arg1, arg2)
	} else {
		return fake.writeReturns.result1, fake.writeReturns.result2
	}
}

func (fake *FakeWriter) WriteCallCount() int {
	fake.writeMutex.RLock()
	defer fake.writeMutex.RUnlock()
	return len(fake.writeArgsForCall)
}

func (fake *FakeWriter) WriteArgsForCall(i int) (release.Release, []string) {
	fake.writeMutex.RLock()
	defer fake.writeMutex.RUnlock()
	return fake.writeArgsForCall[i].arg1, fake.writeArgsForCall[i].arg2
}

func (fake *FakeWriter) WriteReturns(result1 string, result2 error) {
	fake.WriteStub = nil
	fake.writeReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ release.Writer = new(FakeWriter)
