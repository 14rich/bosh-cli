// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/cloudfoundry/bosh-micro-cli/config (interfaces: LegacyDeploymentConfigMigrator)

package mocks

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of LegacyDeploymentConfigMigrator interface
type MockLegacyDeploymentConfigMigrator struct {
	ctrl     *gomock.Controller
	recorder *_MockLegacyDeploymentConfigMigratorRecorder
}

// Recorder for MockLegacyDeploymentConfigMigrator (not exported)
type _MockLegacyDeploymentConfigMigratorRecorder struct {
	mock *MockLegacyDeploymentConfigMigrator
}

func NewMockLegacyDeploymentConfigMigrator(ctrl *gomock.Controller) *MockLegacyDeploymentConfigMigrator {
	mock := &MockLegacyDeploymentConfigMigrator{ctrl: ctrl}
	mock.recorder = &_MockLegacyDeploymentConfigMigratorRecorder{mock}
	return mock
}

func (_m *MockLegacyDeploymentConfigMigrator) EXPECT() *_MockLegacyDeploymentConfigMigratorRecorder {
	return _m.recorder
}

func (_m *MockLegacyDeploymentConfigMigrator) MigrateIfExists() (bool, error) {
	ret := _m.ctrl.Call(_m, "MigrateIfExists")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockLegacyDeploymentConfigMigratorRecorder) MigrateIfExists() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MigrateIfExists")
}

func (_m *MockLegacyDeploymentConfigMigrator) Path() string {
	ret := _m.ctrl.Call(_m, "Path")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockLegacyDeploymentConfigMigratorRecorder) Path() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Path")
}
